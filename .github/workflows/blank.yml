# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the 5.0 branch
on:
  push:
    branches:
      - trunk
      - dotneft-patch-1
  pull_request:
    branches:
      - trunk   

jobs:
  build:
    strategy:
      fail-fast: false  
      matrix:
        build: 
          - zabbix-agent
          - zabbix-agent2
          - zabbix-java-gateway
        os:
         - alpine
         - ubuntu
         - centos
        exclude:
          - os: centos
            build: zabbix-agent2
          - os: ubuntu
            build: zabbix-agent2


    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2                                                                      

      - name: Install buildx
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          mkdir -p ~/.docker/cli-plugins/ && \
          curl -L https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx && \
          chmod +x ~/.docker/cli-plugins/docker-buildx && \
          docker pull -q multiarch/qemu-user-static:latest && \
          docker run --rm --privileged multiarch/qemu-user-static:latest --reset -p yes --credential yes && \
          docker buildx create --name builder-${GITHUB_SHA::8} --driver docker-container --use && \
          docker buildx inspect --bootstrap && \
          docker info && \
          docker buildx inspect
      
      - name: Available platforms
        run: docker buildx inspect | grep Platforms

      - name: Build images
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          DOCKER_PLATFORM="linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le"

          if [ "${{ matrix.os }}" == "ubuntu" ]; then
            DOCKER_PLATFORM="linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le"
          endif

          if [ "${{ matrix.os }}" == "centos" ]; then
            DOCKER_PLATFORM="linux/amd64,linux/arm64,linux/ppc64le"
          endif
          
          docker buildx build --platform ${DOCKER_PLATFORM} \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --output "type=image,push=false" \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            --tag zabbix/${{ matrix.build }}:${{ matrix.os }}-trunk-test \
            --file ./$(echo "${{ matrix.build }}" | cut -d '-' -f2-)/${{ matrix.os }}/Dockerfile ./$(echo "${{ matrix.build }}" | cut -d '-' -f2-)/${{ matrix.os }}

      - name: Docker Hub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push images
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          DOCKER_PLATFORM="linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le"

          if [ "${{ matrix.os }}" == "ubuntu" ]; then
            DOCKER_PLATFORM="linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le"
          endif

          if [ "${{ matrix.os }}" == "centos" ]; then
            DOCKER_PLATFORM="linux/amd64,linux/arm64,linux/ppc64le"
          endif
          
          docker buildx build --platform ${DOCKER_PLATFORM} \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --output "type=image,push=true" \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            --tag zabbix/${{ matrix.build }}:${{ matrix.os }}-trunk-test \
            --file ./$(echo "${{ matrix.build }}" | cut -d '-' -f2-)/${{ matrix.os }}/Dockerfile ./$(echo "${{ matrix.build }}" | cut -d '-' -f2-)/${{ matrix.os }}

      - name: Inspect images
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          docker buildx imagetools inspect zabbix/${{ matrix.build }}:${{ matrix.os }}-trunk-test
